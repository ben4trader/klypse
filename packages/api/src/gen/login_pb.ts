// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file login.proto (package api, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message api.LoginIntent
 */
export class LoginIntent extends Message<LoginIntent> {
  /**
   * @generated from field: string intent_id = 1;
   */
  intentId = "";

  constructor(data?: PartialMessage<LoginIntent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.LoginIntent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "intent_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginIntent {
    return new LoginIntent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginIntent {
    return new LoginIntent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginIntent {
    return new LoginIntent().fromJsonString(jsonString, options);
  }

  static equals(a: LoginIntent | PlainMessage<LoginIntent> | undefined, b: LoginIntent | PlainMessage<LoginIntent> | undefined): boolean {
    return proto3.util.equals(LoginIntent, a, b);
  }
}

/**
 * @generated from message api.LoginIntentCreateRequest
 */
export class LoginIntentCreateRequest extends Message<LoginIntentCreateRequest> {
  /**
   * @generated from field: string nonce = 1;
   */
  nonce = "";

  constructor(data?: PartialMessage<LoginIntentCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.LoginIntentCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginIntentCreateRequest {
    return new LoginIntentCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginIntentCreateRequest {
    return new LoginIntentCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginIntentCreateRequest {
    return new LoginIntentCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: LoginIntentCreateRequest | PlainMessage<LoginIntentCreateRequest> | undefined, b: LoginIntentCreateRequest | PlainMessage<LoginIntentCreateRequest> | undefined): boolean {
    return proto3.util.equals(LoginIntentCreateRequest, a, b);
  }
}

/**
 * @generated from message api.LoginIntentCreateResponse
 */
export class LoginIntentCreateResponse extends Message<LoginIntentCreateResponse> {
  /**
   * @generated from field: api.LoginIntentCreateResponse.Result result = 1;
   */
  result = LoginIntentCreateResponse_Result.OK;

  /**
   * @generated from field: string client_secret = 2;
   */
  clientSecret = "";

  constructor(data?: PartialMessage<LoginIntentCreateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.LoginIntentCreateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "enum", T: proto3.getEnumType(LoginIntentCreateResponse_Result) },
    { no: 2, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginIntentCreateResponse {
    return new LoginIntentCreateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginIntentCreateResponse {
    return new LoginIntentCreateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginIntentCreateResponse {
    return new LoginIntentCreateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: LoginIntentCreateResponse | PlainMessage<LoginIntentCreateResponse> | undefined, b: LoginIntentCreateResponse | PlainMessage<LoginIntentCreateResponse> | undefined): boolean {
    return proto3.util.equals(LoginIntentCreateResponse, a, b);
  }
}

/**
 * @generated from enum api.LoginIntentCreateResponse.Result
 */
export enum LoginIntentCreateResponse_Result {
  /**
   * @generated from enum value: OK = 0;
   */
  OK = 0,

  /**
   * @generated from enum value: INVALID_REQUEST = 1;
   */
  INVALID_REQUEST = 1,

  /**
   * @generated from enum value: UNKNOWN_ERROR = 2;
   */
  UNKNOWN_ERROR = 2,

  /**
   * @generated from enum value: ALREADY_EXISTS = 3;
   */
  ALREADY_EXISTS = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(LoginIntentCreateResponse_Result)
proto3.util.setEnumType(LoginIntentCreateResponse_Result, "api.LoginIntentCreateResponse.Result", [
  { no: 0, name: "OK" },
  { no: 1, name: "INVALID_REQUEST" },
  { no: 2, name: "UNKNOWN_ERROR" },
  { no: 3, name: "ALREADY_EXISTS" },
]);

